name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "release/*", "dev"]

jobs:
  run_tests_ubuntu:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.12", "3.13"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv sync --frozen --no-editable
          uv run --only-group dev pre-commit run --all-files --show-diff-on-failure --verbose

      - name: List dependencies
        run: |
          uv tree

      - name: Run pytest
        run: |
          uv run pytest

  run_tests_macos:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest"]
        python-version: ["3.12", "3.13"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv sync --frozen --no-editable
          uv run --only-group dev pre-commit run --all-files --show-diff-on-failure --verbose

      - name: List dependencies
        run: |
          uv tree

      - name: Run pytest
        run: |
          uv run pytest

  run_tests_windows:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.12", "3.13"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
          uv sync --frozen --no-editable
          uv run --only-group dev pre-commit run --all-files --show-diff-on-failure --verbose

      - name: List dependencies
        run: |
          uv tree

      - name: Run pytest
        run: |
          uv run pytest

  # upload code coverage report
  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv sync --frozen --no-editable
          uv run --only-group dev pre-commit run --all-files --show-diff-on-failure --verbose

      - name: Run tests and collect coverage
        run: uv run pytest --cov src # NEEDS TO BE UPDATED WHEN CHANGING THE NAME OF "src" FOLDER

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
