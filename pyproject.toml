[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lightning-hydra-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "importlib-metadata>=8.6.1",
    "sh>=2.2.2",
    "torch>=2.6.0",
    "torchvision",
    "pytorch-lightning>=2.5.1",
    "torchmetrics>=0.11.4",
    "hydra-core",
    "hydra-colorlog",
    "hydra-optuna-sweeper",
    "rich",
    "certifi>=2025.1.31",
    "transformers>=4.51.2",
    "huggingface-hub>=0.30.2",
    "datasets>=3.5.0",
    "ipython>=8.18.1",
]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
]

[project.scripts]
template_train = "src.train:main"
template_eval = "src.eval:main"


[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
markers = [
  "slow: slow tests",
]
minversion = "6.0"
testpaths = "tests/"

[tool.coverage.html]
directory = "docs/exported/coverage"

[tool.coverage.report]
fail_under = 60
show_missing = true
skip_empty = true
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[tool.coverage.run]
branch = true

[tool.mypy]
ignore_missing_imports = true
pretty = true
show_error_context = true
show_traceback = true

[tool.ruff.lint]
extend-select = [
  "ANN",  # flake8-annotations
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "C90",  # mccabe
  "CPY",  # flake8-copyright
  "D",    # pydocstyle
  "FURB", # refurb
  "I",    # isort
  "N",    # pep8-naming
  "PERF", # Perflint
  "PL",   # pylint
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "SIM",  # flake8-simplify
  "UP",   # pyupgrade
  "W",    # pycodestyle (warning)
]
ignore = [
  "ANN003", # missing-type-kwargs
  "D100",   # undocumented-public-module
  "D104",   # undocumented-public-package (D104)
  "PLR",    # pylint refactor
  "CPY001", # Missing copyright notice at top of file
  "PLC0415",# Import should be at the top of the file
  "PLC1901",#  ... as an empty string is falsey
  "D401",   # First line of docstring should be in imperative mood
  "D203",   # incorrect-blank-line-before-class
  "D213",       # multi-line-summary-second-line
]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101", # assert calls
]
